@page "/gestor"
@using System.Text.Json;
@using Model;
@using System.Text;

<PageTitle>Gestor Presupuesto</PageTitle>

<h1>Gestor Presupuesto</h1>



@if (_gastos.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Fecha</th>
                <th>Tipo</th>
                <th>Descripcion</th>
                <th>Monto</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var _gasto in _gastos)
            {
                <tr>
                    <td>@_gasto.Id</td>
                    <td>@_gasto.Fecha</td>
                    <td>@_gasto.Tipo</td>
                    <td>@_gasto.Descripcion</td>
                    <td>@_gasto.Monto</td>
                </tr>
            }
        </tbody>
    </table>
}



<button class="btn btn-primary" @onclick="CargarGastos">Procesar</button>


@code {
    private String currentCount;
    private List<Gastos> _gastos = new List<Gastos>();


    private void CargarGastos()
    {
        GetGasto();
    }


    public async Task GetGasto()
    {

        using (var client = new HttpClient())
        {
            try
            {
                var result = await client.GetAsync("http://host.docker.internal:4000/api/Gastos/");
                if (result.IsSuccessStatusCode)
                {
                    var resultadoServicio = await result.Content.ReadAsStringAsync();
                    var res = JsonSerializer.Deserialize<List<Gastos>>(resultadoServicio, new JsonSerializerOptions(){ PropertyNameCaseInsensitive = true});

                    _gastos = res;
                    StateHasChanged();
                }
            }
            catch (Exception ex)
            {
                currentCount = ex.Message;
            }
        }
    }

}
