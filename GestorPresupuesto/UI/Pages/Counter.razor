@page "/gestor"
@using System.Text.Json;
@using Reporte;
@using System.Text;

<PageTitle>Gestor Presupuesto</PageTitle>

<h1>Gestor Presupuesto</h1>



@if (_reporte.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Fecha</th>
                <th>Tipo</th>
                <th>Descripcion</th>
                <th>Monto</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var _dato in _reporte)
            {
                <tr>
                    <td>@_dato.Id</td>
                    <td>@_dato.Fecha</td>
                    <td>@_dato.TipoGasto || @_dato.TipoIngreso</td>
                    <td>@_dato.DescripcionGasto || @_dato.DescripcionIngreso</td>
                    <td>@_dato.MontoGasto || @_dato.MontoIngreso</td>
                    <td>@_dato.Diferencia</td>




                </tr>
            }
        </tbody>
    </table>
}



<button class="btn btn-primary" @onclick="CargarDatos">Generar Reporte</button>


@code {
    private String currentCount;
    private List<ReporteModel> _reporte = new List<ReporteModel>();



    private void CargarDatos()
    {
        GetReporte();
    }


    public async Task GetReporte()
    {

        using (var client = new HttpClient())
        {
            try
            {
                var result = await client.GetAsync("http://host.docker.internal:6000/api/Reporte/");
                if (result.IsSuccessStatusCode)
                {
                    var resultadoServicioReporte = await result.Content.ReadAsStringAsync();
                    var res = JsonSerializer.Deserialize<List<ReporteModel>>(resultadoServicioReporte, new JsonSerializerOptions(){ PropertyNameCaseInsensitive = true});

                    _reporte = res;
                    StateHasChanged();
                }
                
            }
            catch (Exception ex)
            {
                currentCount = ex.Message;
            }
        }
    }

}
